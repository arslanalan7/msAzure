#Configure a template
code azuredeploy.json

#This Resource Manager template defines a container group with two containers, a public IP address, and two exposed ports. The first container in the group runs an internet-facing web application. 
#The second container, the sidecar, makes an HTTP request to the main web application via the group's local network.
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "defaultValue": "myContainerGroup",
      "metadata": {
        "description": "Container Group name."
      }
    }
  },
  "variables": {
    "container1name": "aci-tutorial-app",
    "container1image": "mcr.microsoft.com/azuredocs/aci-helloworld:latest",
    "container2name": "aci-tutorial-sidecar",
    "container2image": "mcr.microsoft.com/azuredocs/aci-tutorial-sidecar"
  },
  "resources": [
    {
      "name": "[parameters('containerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[variables('container1name')]",
            "properties": {
              "image": "[variables('container1image')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 1.5
                }
              },
              "ports": [
                {
                  "port": 80
                },
                {
                  "port": 8080
                }
              ]
            }
          },
          {
            "name": "[variables('container2name')]",
            "properties": {
              "image": "[variables('container2image')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 1.5
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 80
            },
            {
                "protocol": "tcp",
                "port": 8080
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]"
    }
  }
}


#Deploy the template
az group create --name myResourceGroup --location eastus

az deployment group create --resource-group myResourceGroup --template-file azuredeploy.json

#View deployment state
az container show --resource-group myResourceGroup --name myContainerGroup --output table

          Name              ResourceGroup    Status    Image                                                                                               IP:ports              Network    CPU/Memory       OsType    Location
          ----------------  ---------------  --------  --------------------------------------------------------------------------------------------------  --------------------  ---------  ---------------  --------  ----------
          myContainerGroup  danlep0318r      Running   mcr.microsoft.com/azuredocs/aci-tutorial-sidecar,mcr.microsoft.com/azuredocs/aci-helloworld:latest  20.42.26.114:80,8080  Public     1.0 core/1.5 gb  Linux     eastus

#If you'd like to view the running application, navigate to its IP address in your browser. For example, the IP is 52.168.26.124 in this example output:

#View container logs
#View the log output of a container using the az container logs command. The --container-name argument specifies the container from which to pull logs. In this example, the aci-tutorial-app container is specified.
az container logs --resource-group myResourceGroup --name myContainerGroup --container-name aci-tutorial-app

            listening on port 80
            ::1 - - [02/Jul/2020:23:17:48 +0000] "HEAD / HTTP/1.1" 200 1663 "-" "curl/7.54.0"
            ::1 - - [02/Jul/2020:23:17:51 +0000] "HEAD / HTTP/1.1" 200 1663 "-" "curl/7.54.0"
            ::1 - - [02/Jul/2020:23:17:54 +0000] "HEAD / HTTP/1.1" 200 1663 "-" "curl/7.54.0"

#To see the logs for the sidecar container, run a similar command specifying the aci-tutorial-sidecar container.
az container logs --resource-group myResourceGroup --name myContainerGroup --container-name aci-tutorial-sidecar

            Every 3s: curl -I http://localhost                          2020-07-02 20:36:41
            
              % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                             Dload  Upload   Total   Spent    Left  Speed
              0  1663    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
            HTTP/1.1 200 OK
            X-Powered-By: Express
            Accept-Ranges: bytes
            Cache-Control: public, max-age=0
            Last-Modified: Wed, 29 Nov 2017 06:40:40 GMT
            ETag: W/"67f-16006818640"
            Content-Type: text/html; charset=UTF-8
            Content-Length: 1663
            Date: Thu, 02 Jul 2020 20:36:41 GMT
            Connection: keep-alive
