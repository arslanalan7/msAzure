#!!!Recall that ARM templates are IDEMPOTENT, which means you can deploy the template to the same environment again, and
#if nothing changes in the template, nothing changes in the environment. 
#If a change is made to the template (for example, you change a parameter value), only that change is deployed.
#Your template can contain all of the resources you need for your Azure solution, and you can safely execute a template again.
#Resources are created only if they don't already exist, and updated only if there's a change.

#CREATE AN ARM TEMPLATE on VS Code**************************************************************************

#create a new file called azuredeploy.json
#On line 1 of the file, enter arm.  Visual Studio Code automatically displays several potential choices that start with arm!. 
#Select the Azure Resource Manager (ARM) template. 
#Your file now looks like this:

{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {},
  "functions": [],
  "variables": {},
  "resources": [],
  "outputs": {}
}

#PREPARATIONS DEPLOYMENT the ARM template to Azure*********************************************************

#In the command bar, select Terminal > New Terminal to open a PowerShell window

Connect-AzAccount              #Sign in to Azure by using Azure PowerShell

#Set the default subscription for all PowerShell commands in this session

Get-AzSubscription              #obtain your subscription(s) and their ID(s)

$context = Get-AzSubscription -SubscriptionId {Your subscription ID}    #replacing {Your subscription ID} with the one you copied in the previous step.
Set-AzContext $context                                                  #This command changes your active subscription to the obtained Subscription

Set-AzDefault -ResourceGroupName [sandbox resource group name]          #Sets default Resource Group. This action lets you omit that parameter from the rest of the Azure PowerShell commands 

#DEPLOY the template to Azure******************************************************************************

$templateFile="azuredeploy.json"
$today=Get-Date -Format "MM-dd-yyyy"
$deploymentName="blanktemplate-"+"$today"
New-AzResourceGroupDeployment -Name $deploymentName -TemplateFile $templateFile

#ADD A RESOURCE to the ARM template************************************************************************

#In the azuredeploy.json file in Visual Studio Code, place your cursor inside the brackets in the resources block "resources":[]
#Enter storage inside the brackets. A list of related snippets appears. Select arm-storage.
#Your file looks like this:
#CHANGE THE VALUES of the "resource name"(UNIQUE) and "displayName" to something 
#CHANGE THE VALUES of the "sku name" from "Premium_LRS" to "Standard_LRS". Change the value of tier to "Standard"
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "functions": [],
    "variables": {},
    "resources": [{
        "name": "learnexercise61616161",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2023-05-01",
        "tags": {
            "displayName": "learnexercise41414141"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        }
    }],
    "outputs": {}
}

#Create PARAMETERS for the ARM template******************************************************
#enter "par" inside the braces in the parameters attribute.
#You see a list of related snippets. Choose new-parameter, which adds a generic parameter to the template. 
#Configure it

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {"storageName": {
        "type": "string",
        "minLength": 3,
        "maxLength": 24,
        "metadata": {
            "description": "The name of the Azure storage resource"
        }
    },
//This is the allowed values for an Azure storage account
    "storageSKU": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
            "Standard_LRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Standard_ZRS",
            "Premium_LRS",
            "Premium_ZRS",
            "Standard_GZRS",
            "Standard_RAGZRS"
        ]
    }},
    "functions": [],
    "variables": {},
    "resources": [{
        "name": "[parameters('storageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2023-05-01",
        "tags": {
            "displayName": "[parameters('storageName')]"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
            "name": "[parameters('storageSKU')]"
        }
    }],
    "outputs": {}
}

#DEPLOY the PARAMETERIZED ARM template
$today=Get-Date -Format "MM-dd-yyyy"
$deploymentName="addSkuParameter-"+"$today"
New-AzResourceGroupDeployment `
  -Name $deploymentName `
  -TemplateFile $templateFile `
  -storageName {your-unique-name} `
  -storageSKU Standard_GRS

#Add OUTPUT to the ARM template************************************************************************
#place your cursor inside the braces in the outputs attribute
#enter out. You get a list of related snippets
#Select new-output. It adds a generic output to the template

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {"storageName": {
        "type": "string",
        "minLength": 3,
        "maxLength": 24,
        "metadata": {
            "description": "The name of the Azure storage resource"
        }
    },
//This is the allowed values for an Azure storage account
    "storageSKU": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
            "Standard_LRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Standard_ZRS",
            "Premium_LRS",
            "Premium_ZRS",
            "Standard_GZRS",
            "Standard_RAGZRS"
        ]
    }},
    "functions": [],
    "variables": {},
    "resources": [{
        "name": "[parameters('storageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2023-05-01",
        "tags": {
            "displayName": "[parameters('storageName')]"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
            "name": "[parameters('storageSKU')]"
        }
    }],
    "outputs": {"storageEndpoint": {
        "type": "object",
        "value": "[reference(parameters('storageName')).primaryEndpoints]"
    }}
}

#DEPLOY the ARM template

$today=Get-Date -Format "MM-dd-yyyy"
$deploymentName="addOutputs-"+"$today"
New-AzResourceGroupDeployment -Name $deploymentName -TemplateFile $templateFile -storageName {your-unique-name} -storageSKU Standard_LRS
