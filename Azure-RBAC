#Create an Azure custom role using Azure PowerShell
#The easiest way to create a custom role is to start with a built-in role, edit it, and then create a new role.
#In PowerShell, use the Get-AzProviderOperation command to get the list of operations for the Microsoft.Support resource provider. It's helpful to know the operations that are available to create your permissions. 
Get-AzProviderOperation "Microsoft.Support/*" | FT Operation, Description -AutoSize

      Operation                              Description
      ---------                              -----------
      Microsoft.Support/register/action      Registers to Support Resource Provider
      Microsoft.Support/supportTickets/read  Gets Support Ticket details (including status, severity, contact ...
      Microsoft.Support/supportTickets/write Creates or Updates a Support Ticket. You can create a Support Tic...

#Use the Get-AzRoleDefinition command to output the Reader role in JSON format.
Get-AzRoleDefinition -Name "Reader" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole.json

#Open the ReaderSupportRole.json file in an editor.

      {
        "Name": "Reader",
        "Id": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
        "IsCustom": false,
        "Description": "Lets you view everything, but not make any changes.",
        "Actions": [
          "*/read"
        ],
        "NotActions": [],
        "DataActions": [],
        "NotDataActions": [],
        "AssignableScopes": [
          "/"
        ]
      }

#Edit the JSON file to add the "Microsoft.Support/*" action to the Actions property. Be sure to include a comma after the read action. This action will allow the user to create support tickets.

#Get the ID of your subscription using the Get-AzSubscription command.
Get-AzSubscription

#In AssignableScopes, add your subscription ID with the following format: "/subscriptions/00000000-0000-0000-0000-000000000000"

      {
        "Name": "Reader Support Tickets",
        "IsCustom": true,
        "Description": "View everything in the subscription and also open support tickets.",
        "Actions": [
          "*/read",
          "Microsoft.Support/*"
        ],
        "NotActions": [],
        "DataActions": [],
        "NotDataActions": [],
        "AssignableScopes": [
          "/subscriptions/f5998593-bf7a-41e9-b2f1-000000000000"
        ],
        "Condition": null,
        "ConditionVersion": null
      }

#To create the new custom role, use the New-AzRoleDefinition command and specify the JSON role definition file.
New-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole.json"

#To list all your custom roles, use the Get-AzRoleDefinition command. We can see the custom role just added
Get-AzRoleDefinition | ? {$_.IsCustom -eq $true} | FT Name, IsCustom

      Name                   IsCustom
      ----                   --------
      Reader Support Tickets     True

#Update a custom role
Get-AzRoleDefinition -Name "Reader Support Tickets" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole2.json

Set-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole2.json"

#****Another update method*******

#To use the PSRoleDefinition object to update your custom role, first use the Get-AzRoleDefinition command to get the role.
$role = Get-AzRoleDefinition "Reader Support Tickets"

#Call the Add method to add the action to read diagnostic settings.
$role.Actions.Add("Microsoft.Insights/diagnosticSettings/*/read")

#Use the Set-AzRoleDefinition to update the role.
Set-AzRoleDefinition -Role $role

#Delete a custom role
Get-AzRoleDefinition "Reader Support Tickets"

#***************************Create an Azure custom role using Azure CLI*****************************************

#Create a new file named ReaderSupportRole.json and add the following JSON

                  {
                    "Name": "",
                    "IsCustom": true,
                    "Description": "",
                    "Actions": [],
                    "NotActions": [],
                    "DataActions": [],
                    "NotDataActions": [],
                    "AssignableScopes": [
                      "/subscriptions/{subscriptionId1}"
                    ]
                  }

#Add the following actions to the Actions property. These actions allow the user to view everything in the subscription and create support tickets.
"*/read",
"Microsoft.Support/*"

#Get the ID of your subscription using the az account list command.
az account list --output table

            Name    CloudName    SubscriptionId                        TenantId                              State    IsDefault
            ------  -----------  ------------------------------------  ------------------------------------  -------  -----------
            000000  AzureCloud   00000000-0000-0000-0000-000000000000  00000000-0000-0000-0000-000000000000  Enabled  True

#In AssignableScopes, replace {subscriptionId1} with your subscription ID.
#Change the Name and Description properties to "Reader Support Tickets" and "View everything in the subscription and also open support tickets."

#Your JSON file should look like the following:

            {
              "Name": "Reader Support Tickets",
              "IsCustom": true,
              "Description": "View everything in the subscription and also open support tickets.",
              "Actions": [
                "*/read",
                "Microsoft.Support/*"
              ],
              "NotActions": [],
              "DataActions": [],
              "NotDataActions": [],
              "AssignableScopes": [
                "/subscriptions/00000000-0000-0000-0000-000000000000"
              ]
            }

#To create the new custom role, use the az role definition create command and specify the JSON role definition file.
az role definition create --role-definition "~/CustomRoles/ReaderSupportRole.json"

#List custom roles
az role definition list --custom-role-only true

#Update a custom role

#In Actions, add the action to create and manage resource group deployments "Microsoft.Resources/deployments/*". Be sure to include a comma after the previous action.

            {
              "Name": "Reader Support Tickets",
              "IsCustom": true,
              "Description": "View everything in the subscription and also open support tickets.",
              "Actions": [
                "*/read",
                "Microsoft.Support/*",
                "Microsoft.Resources/deployments/*"
              ],
              "NotActions": [],
              "DataActions": [],
              "NotDataActions": [],
              "AssignableScopes": [
                "/subscriptions/00000000-0000-0000-0000-000000000000"
              ]
            }

#To update the custom role, use the az role definition update command and specify the updated JSON file.
az role definition update --role-definition "~/CustomRoles/ReaderSupportRole.json"

#Delete a custom role
az role definition delete --name "Reader Support Tickets"
